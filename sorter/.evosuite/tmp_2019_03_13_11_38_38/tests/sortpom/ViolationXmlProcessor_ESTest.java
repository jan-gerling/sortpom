/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:29:54 GMT 2019
 */

package sortpom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.jdom.Document;
import org.junit.runner.RunWith;
import sortpom.ViolationXmlProcessor;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ViolationXmlProcessor_ESTest extends ViolationXmlProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ViolationXmlProcessor violationXmlProcessor0 = new ViolationXmlProcessor();
      // Undeclared exception!
      try { 
        violationXmlProcessor0.createViolationXmlContent((File) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.ViolationXmlProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ViolationXmlProcessor violationXmlProcessor0 = new ViolationXmlProcessor();
      MockFile mockFile0 = new MockFile("");
      Document document0 = violationXmlProcessor0.createViolationXmlContent(mockFile0, "");
      assertNull(document0.getBaseURI());
  }
}
