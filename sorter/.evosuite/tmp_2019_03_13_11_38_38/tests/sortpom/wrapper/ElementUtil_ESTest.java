/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:18:28 GMT 2019
 */

package sortpom.wrapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Element;
import org.junit.runner.RunWith;
import sortpom.wrapper.ElementUtil;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ElementUtil_ESTest extends ElementUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Element element0 = new Element("org.jdom.Element");
      boolean boolean0 = ElementUtil.isElementName(element0, "org.jdom.Element");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = ElementUtil.getDeepName((Element) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ElementUtil.isElementParentName((Element) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.ElementUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ElementUtil.isElementName((Element) null, "sortpom.wrapper.ElementUtil");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.ElementUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Element element0 = new Element("sortpom.wrapper.ElementUtil", "sortpom.wrapper.ElementUtil", "&/4`$HSsNbi3]");
      String string0 = ElementUtil.getDeepName(element0);
      assertEquals("/sortpom.wrapper.ElementUtil", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Element element0 = new Element("n3HnT", "n3HnT");
      boolean boolean0 = ElementUtil.isElementParentName(element0, "n3HnT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Element element0 = new Element("n3HnT", "n3HnT");
      boolean boolean0 = ElementUtil.isElementName(element0, "/n3HnT");
      assertFalse(boolean0);
  }
}
