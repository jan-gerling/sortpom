/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:25:49 GMT 2019
 */

package sortpom.wrapper.content;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Comment;
import org.junit.runner.RunWith;
import sortpom.wrapper.content.SingleNewlineInTextWrapper;
import sortpom.wrapper.content.UnsortedWrapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SingleNewlineInTextWrapper_ESTest extends SingleNewlineInTextWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingleNewlineInTextWrapper singleNewlineInTextWrapper0 = SingleNewlineInTextWrapper.INSTANCE;
      // Undeclared exception!
      try { 
        singleNewlineInTextWrapper0.getContent();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.SingleNewlineInTextWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SingleNewlineInTextWrapper singleNewlineInTextWrapper0 = SingleNewlineInTextWrapper.INSTANCE;
      // Undeclared exception!
      try { 
        singleNewlineInTextWrapper0.isContentElement();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.SingleNewlineInTextWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SingleNewlineInTextWrapper singleNewlineInTextWrapper0 = SingleNewlineInTextWrapper.INSTANCE;
      Comment comment0 = new Comment("&");
      UnsortedWrapper<Comment> unsortedWrapper0 = new UnsortedWrapper<Comment>(comment0);
      // Undeclared exception!
      try { 
        singleNewlineInTextWrapper0.INSTANCE.isBefore(unsortedWrapper0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.SingleNewlineInTextWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SingleNewlineInTextWrapper singleNewlineInTextWrapper0 = SingleNewlineInTextWrapper.INSTANCE;
      // Undeclared exception!
      try { 
        singleNewlineInTextWrapper0.isSortable();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.SingleNewlineInTextWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SingleNewlineInTextWrapper singleNewlineInTextWrapper0 = SingleNewlineInTextWrapper.INSTANCE;
      String string0 = singleNewlineInTextWrapper0.toString();
      assertEquals("SingleNewlineInTextWrapper", string0);
  }
}
