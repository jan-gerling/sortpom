/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:11:17 GMT 2019
 */

package sortpom.processinstruction;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import sortpom.processinstruction.InstructionType;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstructionType_ESTest extends InstructionType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InstructionType[] instructionTypeArray0 = InstructionType.values();
      assertEquals(2, instructionTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InstructionType instructionType0 = InstructionType.valueOf("RESUME");
      assertEquals(InstructionType.IGNORE, instructionType0.next());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      InstructionType instructionType0 = InstructionType.RESUME;
      boolean boolean0 = instructionType0.matches("RESUME");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      boolean boolean0 = InstructionType.containsType("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = InstructionType.containsType("RESUME");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      boolean boolean0 = InstructionType.containsType("ignore");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      InstructionType instructionType0 = InstructionType.IGNORE;
      InstructionType instructionType1 = instructionType0.next();
      InstructionType instructionType2 = instructionType1.next();
      assertNotSame(instructionType2, instructionType1);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      InstructionType instructionType0 = InstructionType.IGNORE;
      boolean boolean0 = instructionType0.matches("(?is)<?sortpoms+");
      assertFalse(boolean0);
  }
}
