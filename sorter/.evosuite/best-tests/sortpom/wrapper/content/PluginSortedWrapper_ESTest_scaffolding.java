/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Wed Mar 13 11:24:44 GMT 2019
 */

package sortpom.wrapper.content;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class PluginSortedWrapper_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "sortpom.wrapper.content.PluginSortedWrapper"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\Jan\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "DE"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\Jan\\Documents\\sortpom\\sorter"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\Jan"); 
    java.lang.System.setProperty("user.language", "de"); 
    java.lang.System.setProperty("user.name", "Jan"); 
    java.lang.System.setProperty("user.timezone", ""); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PluginSortedWrapper_ESTest_scaffolding.class.getClassLoader() ,
      "org.jdom.filter.Filter",
      "org.jdom.Content",
      "org.jdom.ContentList$FilterListIterator",
      "org.jdom.CDATA",
      "org.jdom.Document",
      "sortpom.wrapper.content.Wrapper",
      "org.jdom.filter.AbstractFilter",
      "org.jdom.Namespace",
      "org.jdom.Verifier",
      "org.jdom.IllegalNameException",
      "org.jdom.NamespaceKey",
      "sortpom.parameter.DependencySortOrder",
      "org.jdom.ContentList$FilterList",
      "org.jdom.filter.ElementFilter",
      "sortpom.wrapper.content.SortedWrapper",
      "org.jdom.IllegalDataException",
      "org.jdom.Text",
      "org.jdom.Attribute",
      "sortpom.wrapper.content.ChildElementSorter",
      "sortpom.wrapper.content.PluginSortedWrapper",
      "sortpom.wrapper.content.ChildElementSorter$Scope",
      "org.jdom.Parent",
      "org.jdom.AttributeList",
      "org.jdom.ContentList",
      "org.jdom.IllegalAddException",
      "sortpom.wrapper.content.UnsortedWrapper",
      "org.jdom.Element"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PluginSortedWrapper_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "sortpom.wrapper.content.SortedWrapper",
      "sortpom.wrapper.content.PluginSortedWrapper",
      "sortpom.wrapper.content.ChildElementSorter",
      "org.jdom.NamespaceKey",
      "org.jdom.Namespace",
      "org.jdom.Verifier",
      "org.jdom.Attribute",
      "org.jdom.IllegalNameException",
      "org.jdom.Content",
      "org.jdom.Element",
      "org.jdom.AttributeList",
      "org.jdom.ContentList",
      "org.jdom.Text",
      "org.jdom.CDATA",
      "sortpom.wrapper.content.UnsortedWrapper",
      "org.jdom.DocType",
      "org.jdom.filter.AbstractFilter",
      "org.jdom.filter.ElementFilter",
      "org.jdom.ContentList$FilterList",
      "org.jdom.ContentList$FilterListIterator",
      "sortpom.parameter.DependencySortOrder",
      "org.jdom.Comment",
      "org.jdom.output.Format",
      "org.jdom.output.Format$TextMode",
      "org.jdom.output.Format$DefaultEscapeStrategy",
      "org.jdom.output.XMLOutputter",
      "org.jdom.EntityRef",
      "org.jdom.IllegalDataException",
      "org.jdom.IllegalAddException",
      "org.jdom.ProcessingInstruction",
      "org.jdom.IllegalTargetException",
      "sortpom.wrapper.content.AlphabeticalSortedWrapper",
      "sortpom.wrapper.content.ModuleSortedWrapper",
      "sortpom.wrapper.content.SingleNewlineInTextWrapper",
      "sortpom.wrapper.content.DependencySortedWrapper",
      "org.jdom.filter.ContentFilter",
      "org.jdom.filter.NegateFilter",
      "org.jdom.filter.AndFilter",
      "org.jdom.filter.OrFilter",
      "org.jdom.DescendantIterator",
      "org.jdom.FilterIterator",
      "org.jdom.JDOMException",
      "org.jdom.DataConversionException"
    );
  }
}
