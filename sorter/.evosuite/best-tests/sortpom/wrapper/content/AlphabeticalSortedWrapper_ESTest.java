/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:16:15 GMT 2019
 */

package sortpom.wrapper.content;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.Element;
import org.jdom.Namespace;
import org.junit.runner.RunWith;
import sortpom.wrapper.content.AlphabeticalSortedWrapper;
import sortpom.wrapper.content.UnsortedWrapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlphabeticalSortedWrapper_ESTest extends AlphabeticalSortedWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("org.jdom.filter.OrFilter");
      Element element0 = new Element("org.jdom.filter.OrFilter", namespace0);
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper(element0);
      AlphabeticalSortedWrapper alphabeticalSortedWrapper1 = new AlphabeticalSortedWrapper(element0);
      boolean boolean0 = alphabeticalSortedWrapper0.isBefore(alphabeticalSortedWrapper1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Namespace namespace0 = Namespace.getNamespace("org.jdom.filter.OrFilter");
      Element element0 = new Element("org.jdom.filter.OrFilter", namespace0);
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper(element0);
      Element element1 = alphabeticalSortedWrapper0.getContent();
      assertSame(element1, element0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      // Undeclared exception!
      try { 
        alphabeticalSortedWrapper0.isBefore(alphabeticalSortedWrapper0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.AlphabeticalSortedWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Element element0 = new Element("org.jdom.flcer.OrFglOr", "org.jdom.flcer.OrFglOr", "org.jdom.flcer.OrFglOr");
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper(element0);
      UnsortedWrapper<Element> unsortedWrapper0 = new UnsortedWrapper<Element>(element0);
      boolean boolean0 = alphabeticalSortedWrapper0.isBefore(unsortedWrapper0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      String string0 = alphabeticalSortedWrapper0.toString();
      assertEquals("AlphabeticalSortedWrapper{element=null}", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      Element element0 = alphabeticalSortedWrapper0.getContent();
      assertNull(element0);
  }
}
