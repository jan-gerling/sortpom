/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 10:52:29 GMT 2019
 */

package sortpom.wrapper.operation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Content;
import org.jdom.Element;
import org.jdom.Text;
import org.junit.runner.RunWith;
import sortpom.util.FileUtil;
import sortpom.wrapper.WrapperFactoryImpl;
import sortpom.wrapper.content.ModuleSortedWrapper;
import sortpom.wrapper.content.PluginSortedWrapper;
import sortpom.wrapper.content.UnsortedWrapper;
import sortpom.wrapper.content.Wrapper;
import sortpom.wrapper.operation.GetContentStructureOperation;
import sortpom.wrapper.operation.HierarchyWrapper;
import sortpom.wrapper.operation.HierarchyWrapperOperation;
import sortpom.wrapper.operation.SortChildrenOperation;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HierarchyWrapper_ESTest extends HierarchyWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CDATA cDATA0 = new CDATA("D-{_*>~");
      UnsortedWrapper<Text> unsortedWrapper0 = new UnsortedWrapper<Text>(cDATA0);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(unsortedWrapper0);
      Wrapper<Element> wrapper0 = hierarchyWrapper0.getElementContent();
      assertNull(wrapper0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Element element0 = new Element("sXrtpomwrapper.operation.HirrchyWrapper", "sXrtpomwrapper.operation.HirrchyWrapper");
      ModuleSortedWrapper moduleSortedWrapper0 = new ModuleSortedWrapper(element0, 703);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(moduleSortedWrapper0);
      Wrapper<Element> wrapper0 = hierarchyWrapper0.getElementContent();
      assertSame(moduleSortedWrapper0, wrapper0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Element element0 = new Element("sortpom.wrapper.operation.HierarchyWrapper", "sortpom.wrapper.operation.HierarchyWrapper", "sortpom.wrapper.operation.HierarchyWrapper");
      Element element1 = element0.addContent("sortpom.wrapper.operation.HierarchyWrapper");
      PluginSortedWrapper pluginSortedWrapper0 = new PluginSortedWrapper(element1, 0);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(pluginSortedWrapper0);
      FileUtil fileUtil0 = new FileUtil();
      WrapperFactoryImpl wrapperFactoryImpl0 = new WrapperFactoryImpl(fileUtil0);
      hierarchyWrapper0.createWrappedStructure(wrapperFactoryImpl0);
      GetContentStructureOperation getContentStructureOperation0 = new GetContentStructureOperation();
      // Undeclared exception!
      try { 
        hierarchyWrapper0.processOperation(getContentStructureOperation0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The Content already has an existing parent \"sortpom.wrapper.operation.HierarchyWrapper:sortpom.wrapper.operation.HierarchyWrapper\"
         //
         verifyException("org.jdom.ContentList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Comment comment0 = new Comment(">#7V;[F*p)");
      UnsortedWrapper<Comment> unsortedWrapper0 = new UnsortedWrapper<Comment>(comment0);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(unsortedWrapper0);
      // Undeclared exception!
      try { 
        hierarchyWrapper0.processOperation((HierarchyWrapperOperation) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.operation.HierarchyWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Comment comment0 = new Comment("k:PD");
      UnsortedWrapper<Comment> unsortedWrapper0 = new UnsortedWrapper<Comment>(comment0);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(unsortedWrapper0);
      FileUtil fileUtil0 = new FileUtil();
      WrapperFactoryImpl wrapperFactoryImpl0 = new WrapperFactoryImpl(fileUtil0);
      // Undeclared exception!
      try { 
        hierarchyWrapper0.createWrappedStructure(wrapperFactoryImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.operation.HierarchyWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileUtil fileUtil0 = new FileUtil();
      WrapperFactoryImpl wrapperFactoryImpl0 = new WrapperFactoryImpl(fileUtil0);
      CDATA cDATA0 = new CDATA("");
      Wrapper<CDATA> wrapper0 = wrapperFactoryImpl0.create(cDATA0);
      HierarchyWrapper hierarchyWrapper0 = null;
      try {
        hierarchyWrapper0 = new HierarchyWrapper(wrapper0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.SingleNewlineInTextWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HierarchyWrapper hierarchyWrapper0 = null;
      try {
        hierarchyWrapper0 = new HierarchyWrapper((Wrapper<? extends Content>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.operation.HierarchyWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CDATA cDATA0 = new CDATA("@(#) $RCSfile: DocType.java,v $ $Revision: 1.32 $ $Date: 2007/11/10 05:28:58 $ $Name:  $");
      UnsortedWrapper<CDATA> unsortedWrapper0 = new UnsortedWrapper<CDATA>(cDATA0);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(unsortedWrapper0);
      String string0 = hierarchyWrapper0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Element element0 = new Element("sortpom.wrapper.Lpertion.Hiera-chyWrappej", "sortpom.wrapper.Lpertion.Hiera-chyWrappej");
      Element element1 = element0.addContent("sortpom.wrapper.Lpertion.Hiera-chyWrappej");
      PluginSortedWrapper pluginSortedWrapper0 = new PluginSortedWrapper(element1, 633);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(pluginSortedWrapper0);
      FileUtil fileUtil0 = new FileUtil();
      element1.addContent("HierarchyWrapper{\n  elementContent=PluginSortedWrapper{childElementSorter=ChildElementSorter{childElementTexts=[]}}\n  }\n");
      WrapperFactoryImpl wrapperFactoryImpl0 = new WrapperFactoryImpl(fileUtil0);
      hierarchyWrapper0.createWrappedStructure(wrapperFactoryImpl0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Element element0 = new Element("sortpom.wrapper.Lpertion.Hiera-chyWrappej", "sortpom.wrapper.Lpertion.Hiera-chyWrappej");
      PluginSortedWrapper pluginSortedWrapper0 = new PluginSortedWrapper(element0, 633);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(pluginSortedWrapper0);
      FileUtil fileUtil0 = new FileUtil();
      WrapperFactoryImpl wrapperFactoryImpl0 = new WrapperFactoryImpl(fileUtil0);
      element0.setText("");
      hierarchyWrapper0.createWrappedStructure(wrapperFactoryImpl0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Element element0 = new Element("sortpom.wrapper.Lpertion.Hiera-chyWrappej", "sortpom.wrapper.Lpertion.Hiera-chyWrappej");
      Element element1 = element0.addContent("sortpom.wrapper.Lpertion.Hiera-chyWrappej");
      PluginSortedWrapper pluginSortedWrapper0 = new PluginSortedWrapper(element1, 633);
      HierarchyWrapper hierarchyWrapper0 = new HierarchyWrapper(pluginSortedWrapper0);
      FileUtil fileUtil0 = new FileUtil();
      WrapperFactoryImpl wrapperFactoryImpl0 = new WrapperFactoryImpl(fileUtil0);
      hierarchyWrapper0.createWrappedStructure(wrapperFactoryImpl0);
      SortChildrenOperation sortChildrenOperation0 = new SortChildrenOperation();
      hierarchyWrapper0.processOperation(sortChildrenOperation0);
  }
}
