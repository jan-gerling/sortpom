/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:23:48 GMT 2019
 */

package sortpom.wrapper.content;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.CDATA;
import org.jdom.Element;
import org.jdom.Text;
import org.junit.runner.RunWith;
import sortpom.parameter.DependencySortOrder;
import sortpom.wrapper.content.DependencySortedWrapper;
import sortpom.wrapper.content.UnsortedWrapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DependencySortedWrapper_ESTest extends DependencySortedWrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DependencySortedWrapper dependencySortedWrapper0 = new DependencySortedWrapper((Element) null, 0);
      DependencySortedWrapper dependencySortedWrapper1 = new DependencySortedWrapper((Element) null, 0);
      boolean boolean0 = dependencySortedWrapper0.isBefore(dependencySortedWrapper1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Element element0 = new Element("org.jdom.EntityRef", "qh21(_@iNv)`");
      DependencySortedWrapper dependencySortedWrapper0 = new DependencySortedWrapper(element0, 4469);
      DependencySortOrder dependencySortOrder0 = new DependencySortOrder(",@h1W");
      dependencySortedWrapper0.setSortOrder(dependencySortOrder0);
      assertFalse(dependencySortOrder0.isDeprecatedValueFalse());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DependencySortedWrapper dependencySortedWrapper0 = new DependencySortedWrapper((Element) null, 1);
      CDATA cDATA0 = new CDATA("$g!BF");
      UnsortedWrapper<Text> unsortedWrapper0 = new UnsortedWrapper<Text>(cDATA0);
      boolean boolean0 = dependencySortedWrapper0.isBefore(unsortedWrapper0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DependencySortedWrapper dependencySortedWrapper0 = new DependencySortedWrapper((Element) null, (-984));
      String string0 = dependencySortedWrapper0.toString();
      assertEquals("DependencySortedWrapper{childElementSorter=ChildElementSorter{childElementTexts=[]}}", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DependencySortedWrapper dependencySortedWrapper0 = new DependencySortedWrapper((Element) null, (-984));
      DependencySortOrder dependencySortOrder0 = new DependencySortOrder("DependencySortedWrapper{childElementSorter=ChildElementSorter{childElementTexts=[]}}");
      // Undeclared exception!
      try { 
        dependencySortedWrapper0.setSortOrder(dependencySortOrder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.wrapper.content.DependencySortedWrapper", e);
      }
  }
}
