/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:29:08 GMT 2019
 */

package sortpom.wrapper.content;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jdom.CDATA;
import org.jdom.Comment;
import org.jdom.Element;
import org.jdom.ProcessingInstruction;
import org.junit.runner.RunWith;
import sortpom.wrapper.content.AlphabeticalSortedWrapper;
import sortpom.wrapper.content.DependencySortedWrapper;
import sortpom.wrapper.content.UnsortedWrapper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Wrapper_ESTest extends Wrapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CDATA cDATA0 = new CDATA("ndo2ls$&;Gu");
      UnsortedWrapper<CDATA> unsortedWrapper0 = new UnsortedWrapper<CDATA>(cDATA0);
      boolean boolean0 = unsortedWrapper0.isSortable();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Comment comment0 = new Comment("qOxaTJf,/bkBgw`");
      UnsortedWrapper<Comment> unsortedWrapper0 = new UnsortedWrapper<Comment>(comment0);
      boolean boolean0 = unsortedWrapper0.isContentElement();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DependencySortedWrapper dependencySortedWrapper0 = new DependencySortedWrapper((Element) null, 0);
      CDATA cDATA0 = new CDATA("7");
      UnsortedWrapper<CDATA> unsortedWrapper0 = new UnsortedWrapper<CDATA>(cDATA0);
      boolean boolean0 = dependencySortedWrapper0.isBefore(unsortedWrapper0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      Comment comment0 = new Comment("AlphabeticalSortedWrapper{element=null}");
      UnsortedWrapper<Comment> unsortedWrapper0 = new UnsortedWrapper<Comment>(comment0);
      boolean boolean0 = alphabeticalSortedWrapper0.isBefore(unsortedWrapper0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UnsortedWrapper<ProcessingInstruction> unsortedWrapper0 = new UnsortedWrapper<ProcessingInstruction>((ProcessingInstruction) null);
      ProcessingInstruction processingInstruction0 = unsortedWrapper0.getContent();
      assertNull(processingInstruction0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Comment comment0 = new Comment(";OxaTJf,/bkBgw`");
      UnsortedWrapper<Comment> unsortedWrapper0 = new UnsortedWrapper<Comment>(comment0);
      Comment comment1 = unsortedWrapper0.getContent();
      assertSame(comment1, comment0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CDATA cDATA0 = new CDATA("p.y'");
      UnsortedWrapper<CDATA> unsortedWrapper0 = new UnsortedWrapper<CDATA>(cDATA0);
      // Undeclared exception!
      try { 
        unsortedWrapper0.isBefore(unsortedWrapper0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Cannot be sorted
         //
         verifyException("sortpom.wrapper.content.UnsortedWrapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      boolean boolean0 = alphabeticalSortedWrapper0.isSortable();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      boolean boolean0 = alphabeticalSortedWrapper0.isContentElement();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AlphabeticalSortedWrapper alphabeticalSortedWrapper0 = new AlphabeticalSortedWrapper((Element) null);
      String string0 = alphabeticalSortedWrapper0.toString("");
      assertNotNull(string0);
  }
}
