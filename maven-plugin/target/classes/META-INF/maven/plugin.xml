<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.6 -->

<plugin>
  <name>SortPom Plugin</name>
  <description>A Maven plugin that sorts the pom.xml file.</description>
  <groupId>com.github.ekryd.sortpom</groupId>
  <artifactId>sortpom-maven-plugin</artifactId>
  <version>2.10.1-SNAPSHOT</version>
  <goalPrefix>sortpom</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>help</goal>
      <description>Display help information on sortpom-maven-plugin.&lt;br&gt;
Call &lt;code&gt;mvn sortpom:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>sortpom.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>sort</goal>
      <description>Sorts the pom.xml for a Maven project.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>validate</phase>
      <implementation>sortpom.SortMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>backupFileExtension</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Name of the file extension for the backup file.</description>
        </parameter>
        <parameter>
          <name>createBackupFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should a backup copy be created for the sorted pom.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Encoding for the files.</description>
        </parameter>
        <parameter>
          <name>expandEmptyElements</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should empty xml elements be expanded or not. Example:
&amp;lt;configuration&amp;gt;&amp;lt;/configuration&amp;gt; or &amp;lt;configuration/&amp;gt;</description>
        </parameter>
        <parameter>
          <name>ignoreLineSeparators</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Ignore line separators when comparing current POM with sorted one</description>
        </parameter>
        <parameter>
          <name>indentBlankLines</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should blank lines (if preserved) have indentation.</description>
        </parameter>
        <parameter>
          <name>keepBlankLines</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should blank lines in the pom-file be preserved. A maximum of one line is preserved between each tag.</description>
        </parameter>
        <parameter>
          <name>lineSeparator</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Line separator for sorted pom. Can be either \n, \r or \r\n</description>
        </parameter>
        <parameter>
          <name>nrOfIndentSpace</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Number of space characters to use as indentation. A value of -1 indicates
that tab character should be used instead.</description>
        </parameter>
        <parameter>
          <name>pomFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>This is the File instance that refers to the location of the pom that
should be sorted.</description>
        </parameter>
        <parameter>
          <name>predefinedSortOrder</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Choose between a number of predefined sort order files.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass sortpom plugin</description>
        </parameter>
        <parameter>
          <name>sortDependencies</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated ordered list how dependencies should be sorted. Example: scope,groupId,artifactId.
If scope is specified in the list then the scope ranking is COMPILE, PROVIDED, SYSTEM, RUNTIME, IMPORT and TEST.
The list can be separated by &quot;,;:&quot;</description>
        </parameter>
        <parameter>
          <name>sortModules</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the Maven pom sub modules be sorted alphabetically.</description>
        </parameter>
        <parameter>
          <name>sortOrderFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Custom sort order file.</description>
        </parameter>
        <parameter>
          <name>sortPlugins</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated ordered list how plugins should be sorted. Example: groupId,artifactId
The list can be separated by &quot;,;:&quot;</description>
        </parameter>
        <parameter>
          <name>sortProperties</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the Maven pom properties be sorted alphabetically. Affects both
project/properties and project/profiles/profile/properties</description>
        </parameter>
      </parameters>
      <configuration>
        <backupFileExtension implementation="java.lang.String" default-value=".bak">${sort.backupFileExtension}</backupFileExtension>
        <createBackupFile implementation="boolean" default-value="true">${sort.createBackupFile}</createBackupFile>
        <encoding implementation="java.lang.String" default-value="UTF-8">${sort.encoding}</encoding>
        <expandEmptyElements implementation="boolean" default-value="true">${sort.expandEmptyElements}</expandEmptyElements>
        <ignoreLineSeparators implementation="boolean" default-value="true">${sort.ignoreLineSeparators}</ignoreLineSeparators>
        <indentBlankLines implementation="boolean" default-value="false">${sort.indentBlankLines}</indentBlankLines>
        <keepBlankLines implementation="boolean" default-value="false">${sort.keepBlankLines}</keepBlankLines>
        <lineSeparator implementation="java.lang.String" default-value="${line.separator}">${sort.lineSeparator}</lineSeparator>
        <nrOfIndentSpace implementation="int" default-value="2">${sort.nrOfIndentSpace}</nrOfIndentSpace>
        <pomFile implementation="java.io.File" default-value="${project.file}">${sort.pomFile}</pomFile>
        <predefinedSortOrder implementation="java.lang.String">${sort.predefinedSortOrder}</predefinedSortOrder>
        <skip implementation="boolean" default-value="false">${sort.skip}</skip>
        <sortDependencies implementation="java.lang.String">${sort.sortDependencies}</sortDependencies>
        <sortModules implementation="boolean" default-value="false">${sort.sortModules}</sortModules>
        <sortOrderFile implementation="java.lang.String">${sort.sortOrderFile}</sortOrderFile>
        <sortPlugins implementation="java.lang.String">${sort.sortPlugins}</sortPlugins>
        <sortProperties implementation="boolean" default-value="false">${sort.sortProperties}</sortProperties>
      </configuration>
    </mojo>
    <mojo>
      <goal>verify</goal>
      <description>Verifies that the pom.xml is sorted. If the verification fails then the pom.xml is sorted.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>validate</phase>
      <implementation>sortpom.VerifyMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>backupFileExtension</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Name of the file extension for the backup file.</description>
        </parameter>
        <parameter>
          <name>createBackupFile</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should a backup copy be created for the sorted pom.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Encoding for the files.</description>
        </parameter>
        <parameter>
          <name>expandEmptyElements</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should empty xml elements be expanded or not. Example:
&amp;lt;configuration&amp;gt;&amp;lt;/configuration&amp;gt; or &amp;lt;configuration/&amp;gt;</description>
        </parameter>
        <parameter>
          <name>indentBlankLines</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should blank lines (if preserved) have indentation.</description>
        </parameter>
        <parameter>
          <name>keepBlankLines</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should blank lines in the pom-file be preserved. A maximum of one line is preserved between each tag.</description>
        </parameter>
        <parameter>
          <name>lineSeparator</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Line separator for sorted pom. Can be either \n, \r or \r\n</description>
        </parameter>
        <parameter>
          <name>nrOfIndentSpace</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>Number of space characters to use as indentation. A value of -1 indicates
that tab character should be used instead.</description>
        </parameter>
        <parameter>
          <name>pomFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>This is the File instance that refers to the location of the pom that
should be sorted.</description>
        </parameter>
        <parameter>
          <name>predefinedSortOrder</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Choose between a number of predefined sort order files.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Set this to &apos;true&apos; to bypass sortpom plugin</description>
        </parameter>
        <parameter>
          <name>sortDependencies</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated ordered list how dependencies should be sorted. Example: scope,groupId,artifactId.
If scope is specified in the list then the scope ranking is COMPILE, PROVIDED, SYSTEM, RUNTIME, IMPORT and TEST.
The list can be separated by &quot;,;:&quot;</description>
        </parameter>
        <parameter>
          <name>sortModules</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the Maven pom sub modules be sorted alphabetically.</description>
        </parameter>
        <parameter>
          <name>sortOrderFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Custom sort order file.</description>
        </parameter>
        <parameter>
          <name>sortPlugins</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma-separated ordered list how plugins should be sorted. Example: groupId,artifactId
The list can be separated by &quot;,;:&quot;</description>
        </parameter>
        <parameter>
          <name>sortProperties</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Should the Maven pom properties be sorted alphabetically. Affects both
project/properties and project/profiles/profile/properties</description>
        </parameter>
        <parameter>
          <name>verifyFail</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>What should happen if verification fails. Can be either &apos;sort&apos;, &apos;warn&apos; or &apos;stop&apos;</description>
        </parameter>
        <parameter>
          <name>violationFilename</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Saves the verification failure to an external xml file, recommended filename is &apos;target/sortpom_reports/violation.xml&apos;.</description>
        </parameter>
      </parameters>
      <configuration>
        <backupFileExtension implementation="java.lang.String" default-value=".bak">${sort.backupFileExtension}</backupFileExtension>
        <createBackupFile implementation="boolean" default-value="true">${sort.createBackupFile}</createBackupFile>
        <encoding implementation="java.lang.String" default-value="UTF-8">${sort.encoding}</encoding>
        <expandEmptyElements implementation="boolean" default-value="true">${sort.expandEmptyElements}</expandEmptyElements>
        <indentBlankLines implementation="boolean" default-value="false">${sort.indentBlankLines}</indentBlankLines>
        <keepBlankLines implementation="boolean" default-value="false">${sort.keepBlankLines}</keepBlankLines>
        <lineSeparator implementation="java.lang.String" default-value="${line.separator}">${sort.lineSeparator}</lineSeparator>
        <nrOfIndentSpace implementation="int" default-value="2">${sort.nrOfIndentSpace}</nrOfIndentSpace>
        <pomFile implementation="java.io.File" default-value="${project.file}">${sort.pomFile}</pomFile>
        <predefinedSortOrder implementation="java.lang.String">${sort.predefinedSortOrder}</predefinedSortOrder>
        <skip implementation="boolean" default-value="false">${sort.skip}</skip>
        <sortDependencies implementation="java.lang.String">${sort.sortDependencies}</sortDependencies>
        <sortModules implementation="boolean" default-value="false">${sort.sortModules}</sortModules>
        <sortOrderFile implementation="java.lang.String">${sort.sortOrderFile}</sortOrderFile>
        <sortPlugins implementation="java.lang.String">${sort.sortPlugins}</sortPlugins>
        <sortProperties implementation="boolean" default-value="false">${sort.sortProperties}</sortProperties>
        <verifyFail implementation="java.lang.String" default-value="sort">${sort.verifyFail}</verifyFail>
        <violationFilename implementation="java.lang.String">${sort.violationFilename}</violationFilename>
      </configuration>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>com.github.ekryd.sortpom</groupId>
      <artifactId>sortpom-sorter</artifactId>
      <type>jar</type>
      <version>2.10.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <type>jar</type>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>3.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.6.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <type>jar</type>
      <version>3.8.1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.plexus</artifactId>
      <type>jar</type>
      <version>0.3.3</version>
    </dependency>
    <dependency>
      <groupId>javax.enterprise</groupId>
      <artifactId>cdi-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <type>jar</type>
      <version>1</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.sisu</groupId>
      <artifactId>org.eclipse.sisu.inject</artifactId>
      <type>jar</type>
      <version>0.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.5.2</version>
    </dependency>
  </dependencies>
</plugin>