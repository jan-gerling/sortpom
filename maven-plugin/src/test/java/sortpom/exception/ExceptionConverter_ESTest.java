/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 13 11:39:48 GMT 2019
 */

package sortpom.exception;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import sortpom.exception.ExceptionConverter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExceptionConverter_ESTest extends ExceptionConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Runnable runnable0 = mock(Runnable.class, new ViolatedAssumptionAnswer());
      ExceptionConverter exceptionConverter0 = new ExceptionConverter(runnable0);
      exceptionConverter0.executeAndConvertException();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ExceptionConverter exceptionConverter0 = new ExceptionConverter((Runnable) null);
      // Undeclared exception!
      try { 
        exceptionConverter0.executeAndConvertException();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("sortpom.exception.ExceptionConverter", e);
      }
  }
}
